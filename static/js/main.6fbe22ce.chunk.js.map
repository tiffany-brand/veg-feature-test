{"version":3,"sources":["utils.tsx","OrientMsg.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["detectOrientation","orientation","window","screen","console","log","type","OrientMsg","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAO,SAASA,IACZ,IAAIC,EAAcC,OAAOC,OAAOF,YAGhC,OAFAG,QAAQC,IAAIJ,GAEa,qBAArBA,EAAYK,KACL,WACG,YCWHC,MAff,WAGI,OACI,gCAEI,8EACA,4DCWGC,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAC2B,cAAxBT,IACC,cAAC,EAAD,IACE,0ECEGU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6fbe22ce.chunk.js","sourcesContent":["export function detectOrientation() {\n    let orientation = window.screen.orientation;\n    console.log(orientation);\n\n    if (orientation.type === \"portrait-primary\") {\n        return \"portrait\"\n    } else return \"landscape\"\n    // if (orientation === \"landscape-primary\") {\n    //   console.log(\"That looks good.\");\n    // } else if (orientation === \"landscape-secondary\") {\n    //   console.log(\"Mmmh... the screen is upside down!\");\n    // } else if (orientation === \"portrait-secondary\" || orientation === \"portrait-primary\") {\n    //   console.log(\"Mmmh... you should rotate your device to landscape\");\n    // } \n}","import React from 'react';\n\nfunction OrientMsg(): JSX.Element {\n\n\n    return (\n        <div>\n\n            <h1>This app works best in portrait orientation.</h1>\n            <p>Please turn your device</p>\n\n\n        </div >\n    );\n\n}\n\nexport default OrientMsg;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { detectOrientation } from './utils';\nimport OrientMsg from './OrientMsg';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {detectOrientation() === \"landscape\" ?\n          <OrientMsg />\n          : <h1>This app is in portrait orientation</h1>\n        }\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}